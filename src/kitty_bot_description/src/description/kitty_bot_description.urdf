<?xml version="1.0"?>
<robot name="kitty_bot" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Define robot constants -->
    <xacro:property name="base_width" value="0.31" />
    <xacro:property name="base_length" value="0.42" />
    <xacro:property name="base_radius" value="0.08" />
    <xacro:property name="base_height" value="0.14" />


    <xacro:property name="wheel_radius" value="0.024" />
    <xacro:property name="wheel_width" value="0.02" />
    <xacro:property name="wheel_ygap" value="-0.02" />
    <xacro:property name="wheel_zoff" value="0.03" />
    <xacro:property name="wheel_xoff" value="0.00" />

    <xacro:property name="caster_radius" value="0.01" />
    <xacro:property name="caster_xoff" value="0.06" />

    <!-- Define some commonly used intertial properties  -->
    <xacro:macro name="box_inertia" params="m w h d">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}"
                iyz="0.0" izz="${(m/12) * (w*w + h*h)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertia" params="m r h">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <mass value="${m}" />
            <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0" ixz="0" iyy="${(m/12) * (3*r*r + h*h)}"
                iyz="0" izz="${(m/2) * (r*r)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertia" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}"
                iyz="0.0" izz="${(2/5) * m * (r*r)}" />
        </inertial>
    </xacro:macro>

    <!-- Robot Base -->
    <link name="base_link">
        <visual>
            <origin xyz="0 0 ${base_height/2}" rpy="0 0 0" />
            <geometry>
                <cylinder radius="${base_radius}" length="${base_height}" />
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0" />
            </material>
        </visual>

        <collision>
            <origin xyz="0 0 ${base_height/2}" rpy="0 0 0" />
            <geometry>
                <cylinder radius="${base_radius}" length="${base_height}" />
            </geometry>
        </collision>

        <xacro:cylinder_inertia m="0.5" r="${base_radius}" h="${base_height}" />
    </link>

    <!-- Robot Footprint -->
    <link name="base_footprint" />

    <joint name="base_joint" type="fixed">
        <parent link="base_link" />
        <child link="base_footprint" />
        <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0" />
    </joint>

    <!-- Wheels -->
    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
        <link name="${prefix}_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
                <material name="Gray">
                    <color rgba="0.5 0.5 0.5 1.0" />
                </material>
            </visual>

            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
            </collision>

            <xacro:cylinder_inertia m="0.2" r="${wheel_radius}" h="${wheel_width}" />
        </link>

        <joint name="${prefix}_joint" type="continuous">
            <parent link="base_link" />
            <child link="${prefix}_link" />
            <origin
                xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_radius+wheel_ygap)} ${-wheel_zoff}"
                rpy="0 0 0" />
            <axis xyz="0 1 0" />
        </joint>
    </xacro:macro>

    <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
    <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />

    <!-- Caster Wheel -->
    <link name="front_caster">
        <visual>
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0" />
            </material>
        </visual>

        <collision>
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
        </collision>

        <xacro:sphere_inertia m="0.05" r="${caster_radius}" />
    </link>

    <joint name="front_caster_joint" type="fixed">
        <parent link="base_link" />
        <child link="front_caster" />
        <origin xyz="${caster_xoff} 0.0 ${-(wheel_radius+wheel_zoff-caster_radius)}" rpy="0 0 0" />
    </joint>

    <link name="behind_caster">
        <visual>
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0" />
            </material>
        </visual>

        <collision>
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
        </collision>

        <xacro:sphere_inertia m="0.05" r="${caster_radius}" />
    </link>

    <joint name="behind_caster_joint" type="fixed">
        <parent link="base_link" />
        <child link="behind_caster" />
        <origin xyz="${-caster_xoff} 0.0 ${-(wheel_radius+wheel_zoff-caster_radius)}" rpy="0 0 0" />
    </joint>

    <link name="lidar_link">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <mass value="0.125" />
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001" />
        </inertial>

        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.03" length="0.03" />
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.03" length="0.03" />
            </geometry>
        </visual>
    </link>

    <joint name="lidar_joint" type="fixed">
        <parent link="base_link" />
        <child link="lidar_link" />
        <origin xyz="0 0 0.18" rpy="0 0 0" />
    </joint>

</robot>